$version Generated by VerilatedVcd $end
$timescale 1ps $end

 $scope module TOP $end
  $scope module apb_swc_tb $end
   $var wire 32 6 PD_NUM [31:0] $end
   $var wire  8 : cnt [7:0] $end
   $var wire 32 ) paddr [31:0] $end
   $var wire  1 4 pclk $end
   $var wire  1 + penable $end
   $var wire 32 / prdata [31:0] $end
   $var wire  1 . pready $end
   $var wire  1 # prstn $end
   $var wire  3 * pselx [2:0] $end
   $var wire  1 7 pslverr $end
   $var wire 32 - pwdata [31:0] $end
   $var wire  1 , pwrite $end
   $var wire 32 ( rbuffaddr [31:0] $end
   $var wire 32 9 rbuffdata [31:0] $end
   $var wire  1 8 rbuffwrite $end
   $var wire  1 ' rreq $end
   $var wire 32 & wbuffaddr [31:0] $end
   $var wire 32 % wbuffdata [31:0] $end
   $var wire  1 0 wbuffread $end
   $var wire  1 $ wreq $end
   $scope module apbm_swc_inst $end
    $var wire 32 = ACCESS [31:0] $end
    $var wire 32 ; IDLE [31:0] $end
    $var wire 32 6 PD_NUM [31:0] $end
    $var wire 32 < STEUP [31:0] $end
    $var wire  2 5 nextstate [1:0] $end
    $var wire 32 ) paddr [31:0] $end
    $var wire  1 4 pclk $end
    $var wire  1 + penable $end
    $var wire 32 / prdata [31:0] $end
    $var wire  1 . pready $end
    $var wire  1 # prstn $end
    $var wire  3 * pselx [2:0] $end
    $var wire  1 7 pslverr $end
    $var wire 32 - pwdata [31:0] $end
    $var wire  1 , pwrite $end
    $var wire 32 ( rbuffaddr [31:0] $end
    $var wire 32 9 rbuffdata [31:0] $end
    $var wire  1 8 rbuffwrite $end
    $var wire  1 ' rreq $end
    $var wire  2 1 state [1:0] $end
    $var wire 32 & wbuffaddr [31:0] $end
    $var wire 32 % wbuffdata [31:0] $end
    $var wire  1 0 wbuffread $end
    $var wire  1 $ wreq $end
   $upscope $end
   $scope module apbs_swc_inst $end
    $var wire 32 6 PD_NUM [31:0] $end
    $var wire 32 3 SPI_CR [31:0] $end
    $var wire 32 ) paddr [31:0] $end
    $var wire  1 4 pclk $end
    $var wire  1 + penable $end
    $var wire 32 / prdata [31:0] $end
    $var wire  1 . pready $end
    $var wire  1 # prstn $end
    $var wire  1 2 psel $end
    $var wire  1 7 pslverr $end
    $var wire 32 - pwdata [31:0] $end
    $var wire  1 , pwrite $end
   $upscope $end
  $upscope $end
 $upscope $end
$enddefinitions $end


#0
0#
0$
b00000000000000000000000000000000 %
b00000000000000000000000000000000 &
0'
b00000000000000000000000000000000 (
b00000000000000000000000000000000 )
b000 *
0+
0,
b00000000000000000000000000000000 -
0.
b00000000000000000000000000000000 /
00
b00 1
02
b00000000000000000000000000000000 3
14
b00 5
b00000000000000000000000000000011 6
07
08
b00000000000000000000000000000000 9
b00000000 :
b00000000000000000000000000000000 ;
b00000000000000000000000000000001 <
b00000000000000000000000000000010 =
#1
#5
04
#10
14
#11
1#
#15
04
#20
14
#21
1$
b00000000000000000000000000010000 %
b01 5
#25
04
#30
b001 *
1,
b00000000000000000000000000010000 -
10
b01 1
12
14
b10 5
#35
04
#40
1+
1.
00
b10 1
14
b01 5
#41
0$
b00000000000000000000000000000000 %
1'
#45
04
#50
0+
0,
b00000000000000000000000000000000 -
10
b01 1
b00000000000000000000000000010000 3
14
b10 5
#55
04
#60
1+
00
b10 1
14
b01 5
#61
0'
b00 5
#65
04
#70
b000 *
0+
b00000000000000000000000000010000 /
b00 1
02
14
#75
04
#80
0.
14
#85
04
#90
14
#95
04
#100
14
#105
04
#110
14
#115
04
#120
14
#125
04
#130
14
#135
04
#140
14
#145
04
#150
14
#155
04
#160
14
#165
04
#170
14
#175
04
#180
14
#185
04
#190
14
#195
04
#200
14
#205
04
#210
14
#215
04
#220
14
#225
04
#230
14
#235
04
#240
14
#245
04
#250
14
#255
04
#260
14
#265
04
#270
14
#275
04
#280
14
#285
04
#290
14
#295
04
#300
14
#305
04
#310
14
#315
04
#320
14
#325
04
#330
14
#335
04
#340
14
#345
04
#350
14
#355
04
#360
14
#365
04
#370
14
#375
04
#380
14
#385
04
#390
14
#395
04
#400
14
#405
04
#410
14
#415
04
#420
14
#425
04
#430
14
#435
04
#440
14
#445
04
#450
14
#455
04
#460
14
#465
04
#470
14
#475
04
#480
14
#485
04
#490
14
#495
04
#500
14
