$version Generated by VerilatedVcd $end
$timescale 1ps $end

 $scope module TOP $end
  $scope module apb_swc_tb $end
   $var wire 32 < PD_NUM [31:0] $end
   $var wire  8 > cnt [7:0] $end
   $var wire  1 3 done $end
   $var wire 32 ) paddr [31:0] $end
   $var wire  1 : pclk $end
   $var wire  1 + penable $end
   $var wire 32 / prdata [31:0] $end
   $var wire  1 . pready $end
   $var wire  1 # prstn $end
   $var wire  3 * pselx [2:0] $end
   $var wire  1 = pslverr $end
   $var wire 32 - pwdata [31:0] $end
   $var wire  1 , pwrite $end
   $var wire 32 ( rbuffaddr [31:0] $end
   $var wire 32 2 rbuffdata [31:0] $end
   $var wire  1 1 rbuffwrite $end
   $var wire  1 4 resp $end
   $var wire  1 ' rreq $end
   $var wire 32 & wbuffaddr [31:0] $end
   $var wire 32 % wbuffdata [31:0] $end
   $var wire  1 0 wbuffread $end
   $var wire  1 $ wreq $end
   $scope module apbm_swc_inst $end
    $var wire 32 A ACCESS [31:0] $end
    $var wire 32 ? IDLE [31:0] $end
    $var wire 32 < PD_NUM [31:0] $end
    $var wire 32 @ STEUP [31:0] $end
    $var wire  1 3 done $end
    $var wire  2 ; nextstate [1:0] $end
    $var wire 32 ) paddr [31:0] $end
    $var wire  1 : pclk $end
    $var wire  1 + penable $end
    $var wire 32 / prdata [31:0] $end
    $var wire  1 . pready $end
    $var wire  1 # prstn $end
    $var wire  3 * pselx [2:0] $end
    $var wire  1 = pslverr $end
    $var wire 32 - pwdata [31:0] $end
    $var wire  1 , pwrite $end
    $var wire 32 ( rbuffaddr [31:0] $end
    $var wire 32 2 rbuffdata [31:0] $end
    $var wire  1 1 rbuffwrite $end
    $var wire  1 4 resp $end
    $var wire  1 ' rreq $end
    $var wire  2 5 state [1:0] $end
    $var wire 32 & wbuffaddr [31:0] $end
    $var wire 32 % wbuffdata [31:0] $end
    $var wire  1 0 wbuffread $end
    $var wire  1 $ wreq $end
   $upscope $end
   $scope module apbs_swc_inst $end
    $var wire 32 < PD_NUM [31:0] $end
    $var wire 32 7 SPI_CR [31:0] $end
    $var wire 32 B SPI_CR_ADDR [31:0] $end
    $var wire 32 F SPI_RDR [31:0] $end
    $var wire 32 E SPI_RDR_ADDR [31:0] $end
    $var wire 32 8 SPI_SR [31:0] $end
    $var wire 32 C SPI_SR_ADDR [31:0] $end
    $var wire 32 9 SPI_WDR [31:0] $end
    $var wire 32 D SPI_WDR_ADDR [31:0] $end
    $var wire 32 ) paddr [31:0] $end
    $var wire  1 : pclk $end
    $var wire  1 + penable $end
    $var wire 32 / prdata [31:0] $end
    $var wire  1 . pready $end
    $var wire  1 # prstn $end
    $var wire  1 6 psel $end
    $var wire  1 = pslverr $end
    $var wire 32 - pwdata [31:0] $end
    $var wire  1 , pwrite $end
   $upscope $end
  $upscope $end
 $upscope $end
$enddefinitions $end


#0
0#
0$
b00000000000000000000000000000000 %
b00000000000000000000000000000000 &
0'
b00000000000000000000000000000000 (
b00000000000000000000000000000000 )
b000 *
0+
0,
b00000000000000000000000000000000 -
0.
b00000000000000000000000000000000 /
00
01
b00000000000000000000000000000000 2
03
04
b00 5
06
b00000000000000000000000000000000 7
b00000000000000000000000000000000 8
b00000000000000000000000000000000 9
1:
b00 ;
b00000000000000000000000000000011 <
0=
b00000000 >
b00000000000000000000000000000000 ?
b00000000000000000000000000000001 @
b00000000000000000000000000000010 A
b00000000000100000000000000000000 B
b00000000000100000000000000000100 C
b00000000000100000000000000001000 D
b00000000000100000000000000001100 E
b00000000000000000000000000000000 F
#1
#5
0:
#10
b00000000000000000000000000000010 8
1:
#11
1#
#15
0:
#20
1:
#21
1$
b00000000000000000000000000010000 %
b00000000000100000000000000000000 &
b01 ;
#25
0:
#30
b00000000000100000000000000000000 )
b001 *
1,
b00000000000000000000000000010000 -
10
b01 5
16
1:
b10 ;
#35
0:
#40
1+
1.
00
b10 5
1:
b01 ;
#41
b00000000000000000000000000010010 %
b00000000000100000000000000000100 &
#45
0:
#50
b00000000000100000000000000000100 )
0+
b00000000000000000000000000010010 -
10
13
b01 5
b00000000000000000000000000010000 7
1:
b10 ;
#55
0:
#60
1+
00
03
b10 5
1:
b01 ;
#61
0$
b00000000000000000000000000000000 %
b00000000000000000000000000000000 &
1'
b00000000000100000000000000000000 (
#65
0:
#70
b00000000000100000000000000000000 )
0+
0,
b00000000000000000000000000000000 -
13
b01 5
b00000000000000000000000000010010 8
1:
b10 ;
#75
0:
#80
1+
b00000000000000000000000000010000 /
03
b10 5
1:
b01 ;
#81
b00000000000100000000000000000100 (
#85
0:
#90
b00000000000100000000000000000100 )
0+
11
b00000000000000000000000000010000 2
13
b01 5
1:
b10 ;
#95
0:
#100
1+
b00000000000000000000000000010010 /
01
b00000000000000000000000000000000 2
03
b10 5
1:
b01 ;
#101
0'
b00000000000000000000000000000000 (
b00 ;
#105
0:
#110
b00000000000000000000000000000000 )
b000 *
0+
11
b00000000000000000000000000010010 2
13
b00 5
06
1:
#115
0:
#120
0.
b00000000000000000000000000000000 /
01
b00000000000000000000000000000000 2
03
1:
#125
0:
#130
1:
#135
0:
#140
1:
#145
0:
#150
1:
#151
1$
b00000000000000000000000000010100 %
b00000000000100000000000000001000 &
b01 ;
#155
0:
#160
b00000000000100000000000000001000 )
b001 *
1,
b00000000000000000000000000010100 -
10
b01 5
16
1:
b10 ;
#165
0:
#170
1+
1.
00
b10 5
1:
b01 ;
#171
0$
b00000000000000000000000000000000 %
b00000000000000000000000000000000 &
b00 ;
#175
0:
#180
b00000000000000000000000000000000 )
b000 *
0+
0,
b00000000000000000000000000000000 -
13
b00 5
06
b00000000000000000000000000010100 9
1:
#185
0:
#190
0.
03
1:
#195
0:
#200
1:
#205
0:
#210
1:
#215
0:
#220
1:
#221
1'
b00000000000100000000000000001000 (
b01 ;
#225
0:
#230
b00000000000100000000000000001000 )
b001 *
b01 5
16
1:
b10 ;
#235
0:
#240
1+
1.
b00000000000000000000000000010100 /
b10 5
1:
b01 ;
#241
0'
b00000000000000000000000000000000 (
b00 ;
#245
0:
#250
b00000000000000000000000000000000 )
b000 *
0+
11
b00000000000000000000000000010100 2
13
b00 5
06
1:
#255
0:
#260
0.
b00000000000000000000000000000000 /
01
b00000000000000000000000000000000 2
03
1:
#265
0:
#270
1:
#275
0:
#280
1:
#285
0:
#290
1:
#295
0:
#300
1:
#305
0:
#310
1:
#315
0:
#320
1:
#325
0:
#330
1:
#335
0:
#340
1:
#345
0:
#350
1:
#355
0:
#360
1:
#365
0:
#370
1:
#375
0:
#380
1:
#385
0:
#390
1:
#395
0:
#400
1:
#405
0:
#410
1:
#415
0:
#420
1:
#425
0:
#430
1:
#435
0:
#440
1:
#445
0:
#450
1:
#455
0:
#460
1:
#465
0:
#470
1:
#475
0:
#480
1:
#485
0:
#490
1:
#495
0:
#500
1:
