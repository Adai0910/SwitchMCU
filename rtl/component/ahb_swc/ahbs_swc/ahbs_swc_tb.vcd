$version Generated by VerilatedVcd $end
$timescale 1ps $end

 $scope module TOP $end
  $scope module ahbs_swc_tb $end
   $var wire  1 7 done $end
   $var wire 32 $ haddr [31:0] $end
   $var wire  1 0 hclk $end
   $var wire  1 % hmastlock $end
   $var wire  7 & hprot [6:0] $end
   $var wire 32 * hrdata [31:0] $end
   $var wire  1 4 hready $end
   $var wire  1 5 hresp $end
   $var wire  1 # hrstn $end
   $var wire  3 ' hsize [2:0] $end
   $var wire  2 ( htrans [1:0] $end
   $var wire 32 3 hwdata [31:0] $end
   $var wire  1 ) hwrite $end
   $var wire 32 / rbuffaddr [31:0] $end
   $var wire 32 6 rbuffdata [31:0] $end
   $var wire  1 8 resp $end
   $var wire  1 . rreq $end
   $var wire 32 - wbuffaddr [31:0] $end
   $var wire 32 , wbuffdata [31:0] $end
   $var wire  1 + wreq $end
   $scope module ahbs_swc_inst $end
    $var wire  2 = HTRANS_BUSY [1:0] $end
    $var wire  2 < HTRANS_IDLE [1:0] $end
    $var wire  2 > HTRANS_NONSEQ [1:0] $end
    $var wire  2 ? HTRANS_SEQ [1:0] $end
    $var wire  4 9 IDLE [3:0] $end
    $var wire  4 : READ [3:0] $end
    $var wire  4 ; WRITE [3:0] $end
    $var wire  1 7 done $end
    $var wire 32 $ haddr [31:0] $end
    $var wire  1 0 hclk $end
    $var wire  1 % hmastlock $end
    $var wire  7 & hprot [6:0] $end
    $var wire 32 * hrdata [31:0] $end
    $var wire  1 4 hready $end
    $var wire  1 5 hresp $end
    $var wire  1 # hrstn $end
    $var wire  3 ' hsize [2:0] $end
    $var wire  2 ( htrans [1:0] $end
    $var wire 32 3 hwdata [31:0] $end
    $var wire  1 ) hwrite $end
    $var wire  4 2 next_state [3:0] $end
    $var wire 32 / rbuffaddr [31:0] $end
    $var wire 32 6 rbuffdata [31:0] $end
    $var wire  1 8 resp $end
    $var wire  1 . rreq $end
    $var wire  4 1 state [3:0] $end
    $var wire 32 - wbuffaddr [31:0] $end
    $var wire 32 , wbuffdata [31:0] $end
    $var wire  1 + wreq $end
   $upscope $end
  $upscope $end
 $upscope $end
$enddefinitions $end


#0
0#
b00000000000000000000000000000000 $
0%
b0000000 &
b000 '
b00 (
0)
b00000000000000000000000000000000 *
0+
b00000000000000000000000000000000 ,
b00000000000000000000000000000000 -
0.
b00000000000000000000000000000000 /
10
b0000 1
b0000 2
b00000000000000000000000000000000 3
04
05
b00000000000000000000000000000000 6
07
08
b0000 9
b0001 :
b0010 ;
b00 <
b01 =
b10 >
b11 ?
#1
#5
00
#10
10
#11
1#
#15
00
#20
10
#21
b010 '
#25
00
#30
10
#31
b10 (
1)
b0010 2
#35
00
#40
1+
10
b0010 1
#41
0)
b0001 2
#45
00
#50
0+
1.
10
b0001 1
#51
1)
b0010 2
#55
00
#60
1+
0.
10
b0010 1
#61
0)
b0001 2
#65
00
#70
0+
1.
10
b0001 1
#71
1)
b0010 2
#75
00
#80
1+
0.
10
b0010 1
#81
0)
b0001 2
#85
00
#90
0+
1.
10
b0001 1
#91
1)
b0010 2
#95
00
#100
1+
0.
10
b0010 1
#101
#105
00
#110
10
#111
#115
00
#120
10
#121
#125
00
#130
10
#131
#135
00
#140
10
#141
#145
00
#150
10
#151
0)
b0001 2
#155
00
#160
0+
1.
10
b0001 1
#161
#165
00
#170
10
#171
#175
00
#180
10
#181
#185
00
#190
10
#191
#195
00
#200
10
#201
#205
00
#210
10
#211
1)
b0010 2
#215
00
#220
1+
0.
10
b0010 1
#221
0#
b0000 1
b0000 2
#225
00
#230
0+
10
#231
1#
b0010 2
#235
00
#240
1+
10
b0010 1
#241
#245
00
#250
10
#251
#255
00
#260
10
#261
0#
b0000 1
b0000 2
#265
00
#270
0+
10
#271
1#
b0010 2
#275
00
#280
1+
10
b0010 1
#281
0)
b0001 2
#285
00
#290
0+
1.
10
b0001 1
#291
#295
00
#300
10
#301
0#
b0000 1
b0000 2
#305
00
#310
0.
10
#311
1#
b0001 2
#315
00
#320
1.
10
b0001 1
#321
1)
b0010 2
#325
00
#330
1+
0.
10
b0010 1
#331
0)
b0001 2
#335
00
#340
0+
1.
10
b0001 1
#341
0#
b0000 1
b0000 2
#345
00
#350
0.
10
#351
1#
b0001 2
#355
00
#360
1.
10
b0001 1
#361
b00010001000000010000000100000000 $
#365
00
#370
b00010001000000010000000100000000 /
10
#375
00
#380
10
#385
00
#390
10
#395
00
#400
10
#405
00
#410
10
#415
00
#420
10
#425
00
#430
10
#435
00
#440
10
#445
00
#450
10
#455
00
#460
10
#465
00
#470
10
#475
00
#480
10
#485
00
#490
10
#495
00
#500
10
