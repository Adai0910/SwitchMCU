// Verilated -*- C++ -*-
// DESCRIPTION: Verilator output: Tracing implementation internals
#include "verilated_vcd_c.h"
#include "Vahb2apb_swc_tb__Syms.h"


VL_ATTR_COLD void Vahb2apb_swc_tb___024root__trace_init_sub__TOP__0(Vahb2apb_swc_tb___024root* vlSelf, VerilatedVcd* tracep) {
    if (false && vlSelf) {}  // Prevent unused
    Vahb2apb_swc_tb__Syms* const __restrict vlSymsp VL_ATTR_UNUSED = vlSelf->vlSymsp;
    VL_DEBUG_IF(VL_DBG_MSGF("+    Vahb2apb_swc_tb___024root__trace_init_sub__TOP__0\n"); );
    // Init
    const int c = vlSymsp->__Vm_baseCode;
    // Body
    tracep->pushNamePrefix("ahb2apb_swc_tb ");
    tracep->declBit(c+89,"rstn", false,-1);
    tracep->declBit(c+90,"hclk", false,-1);
    tracep->declBit(c+91,"pclk", false,-1);
    tracep->declBus(c+1,"paddr", false,-1, 31,0);
    tracep->declBus(c+83,"pselx", false,-1, 2,0);
    tracep->declBit(c+2,"penable", false,-1);
    tracep->declBit(c+3,"pwrite", false,-1);
    tracep->declBus(c+4,"pwdata", false,-1, 31,0);
    tracep->declBit(c+84,"pready", false,-1);
    tracep->declBus(c+5,"prdata", false,-1, 31,0);
    tracep->declBit(c+96,"pslverr", false,-1);
    tracep->declBus(c+52,"haddr", false,-1, 31,0);
    tracep->declBit(c+97,"hmastlock", false,-1);
    tracep->declBus(c+98,"hprot", false,-1, 6,0);
    tracep->declBus(c+99,"hsize", false,-1, 2,0);
    tracep->declBus(c+53,"htrans", false,-1, 1,0);
    tracep->declBus(c+54,"hwdata", false,-1, 31,0);
    tracep->declBus(c+55,"hrdata", false,-1, 31,0);
    tracep->declBit(c+56,"hwrite", false,-1);
    tracep->declBit(c+57,"hready", false,-1);
    tracep->declBit(c+100,"hresp", false,-1);
    tracep->declBit(c+58,"wbuffread", false,-1);
    tracep->declBit(c+59,"rbuffread", false,-1);
    tracep->declBit(c+92,"wreq", false,-1);
    tracep->declBus(c+93,"wbuffdata", false,-1, 31,0);
    tracep->declBus(c+94,"wbuffaddr", false,-1, 31,0);
    tracep->declBit(c+60,"rbuffwrite", false,-1);
    tracep->declBit(c+101,"rreq", false,-1);
    tracep->declBus(c+61,"rbuffdata", false,-1, 31,0);
    tracep->declBus(c+102,"rbuffaddr", false,-1, 31,0);
    tracep->declBit(c+62,"done", false,-1);
    tracep->declBit(c+63,"resp", false,-1);
    tracep->pushNamePrefix("ahb2apb_swc_inst ");
    tracep->declBit(c+89,"rstn", false,-1);
    tracep->declBit(c+90,"hclk", false,-1);
    tracep->declBit(c+89,"hrstn", false,-1);
    tracep->declBus(c+52,"haddr", false,-1, 31,0);
    tracep->declBus(c+98,"hprot", false,-1, 6,0);
    tracep->declBus(c+99,"hsize", false,-1, 2,0);
    tracep->declBus(c+53,"htrans", false,-1, 1,0);
    tracep->declBus(c+54,"hwdata", false,-1, 31,0);
    tracep->declBus(c+55,"hrdata", false,-1, 31,0);
    tracep->declBit(c+56,"hwrite", false,-1);
    tracep->declBit(c+57,"hready", false,-1);
    tracep->declBit(c+100,"hresp", false,-1);
    tracep->declBus(c+103,"PD_NUM", false,-1, 31,0);
    tracep->declBit(c+91,"pclk", false,-1);
    tracep->declBit(c+89,"prstn", false,-1);
    tracep->declBus(c+1,"paddr", false,-1, 31,0);
    tracep->declBus(c+83,"pselx", false,-1, 2,0);
    tracep->declBit(c+2,"penable", false,-1);
    tracep->declBit(c+3,"pwrite", false,-1);
    tracep->declBus(c+4,"pwdata", false,-1, 31,0);
    tracep->declBit(c+84,"pready", false,-1);
    tracep->declBus(c+5,"prdata", false,-1, 31,0);
    tracep->declBit(c+96,"pslverr", false,-1);
    tracep->declBit(c+6,"wbuffread", false,-1);
    tracep->declBit(c+64,"wreq_ahbs", false,-1);
    tracep->declBit(c+7,"wreq_r", false,-1);
    tracep->declBit(c+8,"wreq_rr", false,-1);
    tracep->declBit(c+9,"wreq_rrr", false,-1);
    tracep->declBit(c+10,"wreq_apbm", false,-1);
    tracep->declBus(c+65,"wbuffdata", false,-1, 31,0);
    tracep->declBus(c+66,"wbuffaddr", false,-1, 31,0);
    tracep->declBit(c+11,"rbuffread", false,-1);
    tracep->declBit(c+12,"rbuffwrite", false,-1);
    tracep->declBit(c+67,"rreq_ahbs", false,-1);
    tracep->declBit(c+13,"rreq_r", false,-1);
    tracep->declBit(c+14,"rreq_rr", false,-1);
    tracep->declBit(c+15,"rreq_rrr", false,-1);
    tracep->declBit(c+16,"rreq_apbm", false,-1);
    tracep->declBus(c+17,"rbuffdata", false,-1, 31,0);
    tracep->declBus(c+68,"rbuffaddr", false,-1, 31,0);
    tracep->declBit(c+85,"done_apbm", false,-1);
    tracep->declBit(c+69,"done_r", false,-1);
    tracep->declBit(c+70,"done_rr", false,-1);
    tracep->declBit(c+71,"done_rrr", false,-1);
    tracep->declBit(c+72,"done_ahbs", false,-1);
    tracep->declBit(c+18,"resp", false,-1);
    tracep->declBit(c+73,"wreq_ahbs_edge", false,-1);
    tracep->declBit(c+74,"rreq_ahbs_edge", false,-1);
    tracep->pushNamePrefix("ahb2apb_ahbs_swc_inst ");
    tracep->declBit(c+90,"hclk", false,-1);
    tracep->declBit(c+89,"hrstn", false,-1);
    tracep->declBus(c+52,"haddr", false,-1, 31,0);
    tracep->declBus(c+98,"hprot", false,-1, 6,0);
    tracep->declBus(c+99,"hsize", false,-1, 2,0);
    tracep->declBus(c+53,"htrans", false,-1, 1,0);
    tracep->declBus(c+54,"hwdata", false,-1, 31,0);
    tracep->declBus(c+55,"hrdata", false,-1, 31,0);
    tracep->declBit(c+56,"hwrite", false,-1);
    tracep->declBit(c+57,"hready", false,-1);
    tracep->declBit(c+100,"hresp", false,-1);
    tracep->declBit(c+64,"wreq", false,-1);
    tracep->declBus(c+65,"wbuffdata", false,-1, 31,0);
    tracep->declBus(c+66,"wbuffaddr", false,-1, 31,0);
    tracep->declBit(c+67,"rreq", false,-1);
    tracep->declBus(c+17,"rbuffdata", false,-1, 31,0);
    tracep->declBus(c+68,"rbuffaddr", false,-1, 31,0);
    tracep->declBit(c+72,"done", false,-1);
    tracep->declBus(c+104,"HTRANS_IDLE", false,-1, 31,0);
    tracep->declBus(c+105,"HTRANS_BUSY", false,-1, 31,0);
    tracep->declBus(c+106,"HTRANS_NONSEQ", false,-1, 31,0);
    tracep->declBus(c+103,"HTRANS_SEQ", false,-1, 31,0);
    tracep->declBus(c+104,"IDLE", false,-1, 31,0);
    tracep->declBus(c+105,"WSATRT", false,-1, 31,0);
    tracep->declBus(c+106,"WPAUSE", false,-1, 31,0);
    tracep->declBus(c+103,"WWAIT", false,-1, 31,0);
    tracep->declBus(c+107,"WDONE", false,-1, 31,0);
    tracep->declBus(c+108,"RSTART", false,-1, 31,0);
    tracep->declBus(c+109,"RWAIT", false,-1, 31,0);
    tracep->declBus(c+110,"RDONE", false,-1, 31,0);
    tracep->declBus(c+75,"state", false,-1, 2,0);
    tracep->declBus(c+76,"nextstate", false,-1, 2,0);
    tracep->popNamePrefix(1);
    tracep->pushNamePrefix("ahb2apb_apbm_swc_inst ");
    tracep->declBus(c+103,"PD_NUM", false,-1, 31,0);
    tracep->declBit(c+91,"pclk", false,-1);
    tracep->declBit(c+89,"prstn", false,-1);
    tracep->declBus(c+1,"paddr", false,-1, 31,0);
    tracep->declBus(c+83,"pselx", false,-1, 2,0);
    tracep->declBit(c+2,"penable", false,-1);
    tracep->declBit(c+3,"pwrite", false,-1);
    tracep->declBus(c+4,"pwdata", false,-1, 31,0);
    tracep->declBit(c+84,"pready", false,-1);
    tracep->declBus(c+5,"prdata", false,-1, 31,0);
    tracep->declBit(c+96,"pslverr", false,-1);
    tracep->declBit(c+6,"wbuffread", false,-1);
    tracep->declBit(c+10,"wreq", false,-1);
    tracep->declBus(c+65,"wbuffdata", false,-1, 31,0);
    tracep->declBus(c+66,"wbuffaddr", false,-1, 31,0);
    tracep->declBit(c+11,"rbuffread", false,-1);
    tracep->declBit(c+12,"rbuffwrite", false,-1);
    tracep->declBit(c+16,"rreq", false,-1);
    tracep->declBus(c+17,"rbuffdata", false,-1, 31,0);
    tracep->declBus(c+68,"rbuffaddr", false,-1, 31,0);
    tracep->declBit(c+85,"done", false,-1);
    tracep->declBit(c+18,"resp", false,-1);
    tracep->declBus(c+104,"IDLE", false,-1, 31,0);
    tracep->declBus(c+105,"STEUP", false,-1, 31,0);
    tracep->declBus(c+106,"ACCESS", false,-1, 31,0);
    tracep->declBus(c+86,"state", false,-1, 1,0);
    tracep->declBus(c+87,"nextstate", false,-1, 1,0);
    tracep->popNamePrefix(2);
    tracep->pushNamePrefix("ahbm_swc_inst ");
    tracep->declBit(c+90,"hclk", false,-1);
    tracep->declBit(c+89,"hrstn", false,-1);
    tracep->declBus(c+52,"haddr", false,-1, 31,0);
    tracep->declBit(c+97,"hmastlock", false,-1);
    tracep->declBus(c+98,"hprot", false,-1, 6,0);
    tracep->declBus(c+99,"hsize", false,-1, 2,0);
    tracep->declBus(c+53,"htrans", false,-1, 1,0);
    tracep->declBus(c+54,"hwdata", false,-1, 31,0);
    tracep->declBus(c+55,"hrdata", false,-1, 31,0);
    tracep->declBit(c+56,"hwrite", false,-1);
    tracep->declBit(c+57,"hready", false,-1);
    tracep->declBit(c+100,"hresp", false,-1);
    tracep->declBit(c+58,"wbuffread", false,-1);
    tracep->declBit(c+59,"rbuffread", false,-1);
    tracep->declBit(c+92,"wreq", false,-1);
    tracep->declBus(c+93,"wbuffdata", false,-1, 31,0);
    tracep->declBus(c+94,"wbuffaddr", false,-1, 31,0);
    tracep->declBit(c+60,"rbuffwrite", false,-1);
    tracep->declBit(c+101,"rreq", false,-1);
    tracep->declBus(c+61,"rbuffdata", false,-1, 31,0);
    tracep->declBus(c+102,"rbuffaddr", false,-1, 31,0);
    tracep->declBit(c+62,"done", false,-1);
    tracep->declBit(c+63,"resp", false,-1);
    tracep->declBus(c+104,"IDLE", false,-1, 31,0);
    tracep->declBus(c+105,"STEUP", false,-1, 31,0);
    tracep->declBus(c+106,"WAIT", false,-1, 31,0);
    tracep->declBus(c+104,"HTRANS_IDLE", false,-1, 31,0);
    tracep->declBus(c+105,"HTRANS_BUSY", false,-1, 31,0);
    tracep->declBus(c+106,"HTRANS_NONSEQ", false,-1, 31,0);
    tracep->declBus(c+103,"HTRANS_SEQ", false,-1, 31,0);
    tracep->declBus(c+77,"state", false,-1, 1,0);
    tracep->declBus(c+95,"nextstate", false,-1, 1,0);
    tracep->declBus(c+78,"hwdatabuff", false,-1, 31,0);
    tracep->declBit(c+79,"wpendingflag", false,-1);
    tracep->declBit(c+80,"wpendingflagdly", false,-1);
    tracep->declBit(c+81,"rpendingflag", false,-1);
    tracep->declBit(c+82,"rpendingflagdly", false,-1);
    tracep->popNamePrefix(1);
    tracep->pushNamePrefix("spictrl_swc_inst ");
    tracep->declBus(c+111,"SPI_CR_ADDR", false,-1, 31,0);
    tracep->declBus(c+112,"SPI_SR_ADDR", false,-1, 31,0);
    tracep->declBus(c+113,"SPI_WDR_ADDR", false,-1, 31,0);
    tracep->declBus(c+114,"SPI_RDR_ADDR", false,-1, 31,0);
    tracep->declBus(c+103,"PD_NUM", false,-1, 31,0);
    tracep->declBit(c+91,"pclk", false,-1);
    tracep->declBit(c+89,"prstn", false,-1);
    tracep->declBus(c+1,"paddr", false,-1, 31,0);
    tracep->declBit(c+88,"psel", false,-1);
    tracep->declBit(c+2,"penable", false,-1);
    tracep->declBit(c+3,"pwrite", false,-1);
    tracep->declBus(c+4,"pwdata", false,-1, 31,0);
    tracep->declBit(c+84,"pready", false,-1);
    tracep->declBus(c+5,"prdata", false,-1, 31,0);
    tracep->declBit(c+96,"pslverr", false,-1);
    tracep->declBus(c+19,"SPI_CR", false,-1, 31,0);
    tracep->declBus(c+20,"SPI_SR", false,-1, 31,0);
    tracep->declBus(c+21,"SPI_WDR", false,-1, 31,0);
    tracep->declBus(c+115,"SPI_RDR", false,-1, 31,0);
    tracep->declBit(c+22,"wen", false,-1);
    tracep->declBus(c+23,"wdata", false,-1, 31,0);
    tracep->declBit(c+24,"full", false,-1);
    tracep->declBit(c+25,"ren", false,-1);
    tracep->declBus(c+26,"rdata", false,-1, 31,0);
    tracep->declBit(c+27,"empty", false,-1);
    tracep->declBus(c+116,"COUNTER_WIDTH", false,-1, 31,0);
    tracep->declBus(c+104,"IDLE", false,-1, 31,0);
    tracep->declBus(c+105,"READ", false,-1, 31,0);
    tracep->declBus(c+106,"DELAY", false,-1, 31,0);
    tracep->declBus(c+103,"STORE", false,-1, 31,0);
    tracep->declBus(c+107,"COUNT", false,-1, 31,0);
    tracep->declBus(c+28,"counter", false,-1, 10,0);
    tracep->declBus(c+29,"state", false,-1, 2,0);
    tracep->declBus(c+30,"nextstate", false,-1, 2,0);
    tracep->declBus(c+31,"spi_wdata", false,-1, 31,0);
    tracep->declBus(c+117,"max_cnt", false,-1, 10,0);
    tracep->pushNamePrefix("wdr_syncfifo_swc_inst ");
    tracep->declBus(c+118,"data_width", false,-1, 31,0);
    tracep->declBus(c+119,"ram_size", false,-1, 31,0);
    tracep->declBus(c+107,"addr_width", false,-1, 31,0);
    tracep->declBit(c+89,"rstn", false,-1);
    tracep->declBit(c+91,"clk", false,-1);
    tracep->declBit(c+22,"wen", false,-1);
    tracep->declBus(c+23,"wdata", false,-1, 31,0);
    tracep->declBit(c+24,"full", false,-1);
    tracep->declBit(c+25,"ren", false,-1);
    tracep->declBus(c+26,"rdata", false,-1, 31,0);
    tracep->declBit(c+27,"empty", false,-1);
    tracep->declBus(c+32,"waddr", false,-1, 3,0);
    tracep->declBus(c+33,"raddr", false,-1, 3,0);
    tracep->declBus(c+34,"waddr_ptr", false,-1, 4,0);
    tracep->declBus(c+35,"raddr_ptr", false,-1, 4,0);
    for (int i = 0; i < 16; ++i) {
        tracep->declBus(c+36+i*1,"fifo_ram", true,(i+0), 31,0);
    }
    tracep->popNamePrefix(3);
}

VL_ATTR_COLD void Vahb2apb_swc_tb___024root__trace_init_top(Vahb2apb_swc_tb___024root* vlSelf, VerilatedVcd* tracep) {
    if (false && vlSelf) {}  // Prevent unused
    Vahb2apb_swc_tb__Syms* const __restrict vlSymsp VL_ATTR_UNUSED = vlSelf->vlSymsp;
    VL_DEBUG_IF(VL_DBG_MSGF("+    Vahb2apb_swc_tb___024root__trace_init_top\n"); );
    // Body
    Vahb2apb_swc_tb___024root__trace_init_sub__TOP__0(vlSelf, tracep);
}

VL_ATTR_COLD void Vahb2apb_swc_tb___024root__trace_full_top_0(void* voidSelf, VerilatedVcd::Buffer* bufp);
void Vahb2apb_swc_tb___024root__trace_chg_top_0(void* voidSelf, VerilatedVcd::Buffer* bufp);
void Vahb2apb_swc_tb___024root__trace_cleanup(void* voidSelf, VerilatedVcd* /*unused*/);

VL_ATTR_COLD void Vahb2apb_swc_tb___024root__trace_register(Vahb2apb_swc_tb___024root* vlSelf, VerilatedVcd* tracep) {
    if (false && vlSelf) {}  // Prevent unused
    Vahb2apb_swc_tb__Syms* const __restrict vlSymsp VL_ATTR_UNUSED = vlSelf->vlSymsp;
    VL_DEBUG_IF(VL_DBG_MSGF("+    Vahb2apb_swc_tb___024root__trace_register\n"); );
    // Body
    tracep->addFullCb(&Vahb2apb_swc_tb___024root__trace_full_top_0, vlSelf);
    tracep->addChgCb(&Vahb2apb_swc_tb___024root__trace_chg_top_0, vlSelf);
    tracep->addCleanupCb(&Vahb2apb_swc_tb___024root__trace_cleanup, vlSelf);
}

VL_ATTR_COLD void Vahb2apb_swc_tb___024root__trace_full_sub_0(Vahb2apb_swc_tb___024root* vlSelf, VerilatedVcd::Buffer* bufp);

VL_ATTR_COLD void Vahb2apb_swc_tb___024root__trace_full_top_0(void* voidSelf, VerilatedVcd::Buffer* bufp) {
    VL_DEBUG_IF(VL_DBG_MSGF("+    Vahb2apb_swc_tb___024root__trace_full_top_0\n"); );
    // Init
    Vahb2apb_swc_tb___024root* const __restrict vlSelf VL_ATTR_UNUSED = static_cast<Vahb2apb_swc_tb___024root*>(voidSelf);
    Vahb2apb_swc_tb__Syms* const __restrict vlSymsp VL_ATTR_UNUSED = vlSelf->vlSymsp;
    // Body
    Vahb2apb_swc_tb___024root__trace_full_sub_0((&vlSymsp->TOP), bufp);
}

VL_ATTR_COLD void Vahb2apb_swc_tb___024root__trace_full_sub_0(Vahb2apb_swc_tb___024root* vlSelf, VerilatedVcd::Buffer* bufp) {
    if (false && vlSelf) {}  // Prevent unused
    Vahb2apb_swc_tb__Syms* const __restrict vlSymsp VL_ATTR_UNUSED = vlSelf->vlSymsp;
    VL_DEBUG_IF(VL_DBG_MSGF("+    Vahb2apb_swc_tb___024root__trace_full_sub_0\n"); );
    // Init
    uint32_t* const oldp VL_ATTR_UNUSED = bufp->oldp(vlSymsp->__Vm_baseCode);
    // Body
    bufp->fullIData(oldp+1,(vlSelf->ahb2apb_swc_tb__DOT__paddr),32);
    bufp->fullBit(oldp+2,(vlSelf->ahb2apb_swc_tb__DOT__penable));
    bufp->fullBit(oldp+3,(vlSelf->ahb2apb_swc_tb__DOT__pwrite));
    bufp->fullIData(oldp+4,(vlSelf->ahb2apb_swc_tb__DOT__pwdata),32);
    bufp->fullIData(oldp+5,(vlSelf->ahb2apb_swc_tb__DOT__prdata),32);
    bufp->fullBit(oldp+6,(vlSelf->ahb2apb_swc_tb__DOT__ahb2apb_swc_inst__DOT__wbuffread));
    bufp->fullBit(oldp+7,(vlSelf->ahb2apb_swc_tb__DOT__ahb2apb_swc_inst__DOT__wreq_r));
    bufp->fullBit(oldp+8,(vlSelf->ahb2apb_swc_tb__DOT__ahb2apb_swc_inst__DOT__wreq_rr));
    bufp->fullBit(oldp+9,(vlSelf->ahb2apb_swc_tb__DOT__ahb2apb_swc_inst__DOT__wreq_rrr));
    bufp->fullBit(oldp+10,(vlSelf->ahb2apb_swc_tb__DOT__ahb2apb_swc_inst__DOT__wreq_apbm));
    bufp->fullBit(oldp+11,(vlSelf->ahb2apb_swc_tb__DOT__ahb2apb_swc_inst__DOT__rbuffread));
    bufp->fullBit(oldp+12,(vlSelf->ahb2apb_swc_tb__DOT__ahb2apb_swc_inst__DOT__rbuffwrite));
    bufp->fullBit(oldp+13,(vlSelf->ahb2apb_swc_tb__DOT__ahb2apb_swc_inst__DOT__rreq_r));
    bufp->fullBit(oldp+14,(vlSelf->ahb2apb_swc_tb__DOT__ahb2apb_swc_inst__DOT__rreq_rr));
    bufp->fullBit(oldp+15,(vlSelf->ahb2apb_swc_tb__DOT__ahb2apb_swc_inst__DOT__rreq_rrr));
    bufp->fullBit(oldp+16,(vlSelf->ahb2apb_swc_tb__DOT__ahb2apb_swc_inst__DOT__rreq_apbm));
    bufp->fullIData(oldp+17,(vlSelf->ahb2apb_swc_tb__DOT__ahb2apb_swc_inst__DOT__rbuffdata),32);
    bufp->fullBit(oldp+18,(vlSelf->ahb2apb_swc_tb__DOT__ahb2apb_swc_inst__DOT__resp));
    bufp->fullIData(oldp+19,(vlSelf->ahb2apb_swc_tb__DOT__spictrl_swc_inst__DOT__SPI_CR),32);
    bufp->fullIData(oldp+20,(vlSelf->ahb2apb_swc_tb__DOT__spictrl_swc_inst__DOT__SPI_SR),32);
    bufp->fullIData(oldp+21,(vlSelf->ahb2apb_swc_tb__DOT__spictrl_swc_inst__DOT__SPI_WDR),32);
    bufp->fullBit(oldp+22,(vlSelf->ahb2apb_swc_tb__DOT__spictrl_swc_inst__DOT__wen));
    bufp->fullIData(oldp+23,(vlSelf->ahb2apb_swc_tb__DOT__spictrl_swc_inst__DOT__wdata),32);
    bufp->fullBit(oldp+24,(vlSelf->ahb2apb_swc_tb__DOT__spictrl_swc_inst__DOT__full));
    bufp->fullBit(oldp+25,(vlSelf->ahb2apb_swc_tb__DOT__spictrl_swc_inst__DOT__ren));
    bufp->fullIData(oldp+26,(vlSelf->ahb2apb_swc_tb__DOT__spictrl_swc_inst__DOT__rdata),32);
    bufp->fullBit(oldp+27,(vlSelf->ahb2apb_swc_tb__DOT__spictrl_swc_inst__DOT__empty));
    bufp->fullSData(oldp+28,(vlSelf->ahb2apb_swc_tb__DOT__spictrl_swc_inst__DOT__counter),11);
    bufp->fullCData(oldp+29,(vlSelf->ahb2apb_swc_tb__DOT__spictrl_swc_inst__DOT__state),3);
    bufp->fullCData(oldp+30,(vlSelf->ahb2apb_swc_tb__DOT__spictrl_swc_inst__DOT__nextstate),3);
    bufp->fullIData(oldp+31,(vlSelf->ahb2apb_swc_tb__DOT__spictrl_swc_inst__DOT__spi_wdata),32);
    bufp->fullCData(oldp+32,((0xfU & (IData)(vlSelf->ahb2apb_swc_tb__DOT__spictrl_swc_inst__DOT__wdr_syncfifo_swc_inst__DOT__waddr_ptr))),4);
    bufp->fullCData(oldp+33,((0xfU & (IData)(vlSelf->ahb2apb_swc_tb__DOT__spictrl_swc_inst__DOT__wdr_syncfifo_swc_inst__DOT__raddr_ptr))),4);
    bufp->fullCData(oldp+34,(vlSelf->ahb2apb_swc_tb__DOT__spictrl_swc_inst__DOT__wdr_syncfifo_swc_inst__DOT__waddr_ptr),5);
    bufp->fullCData(oldp+35,(vlSelf->ahb2apb_swc_tb__DOT__spictrl_swc_inst__DOT__wdr_syncfifo_swc_inst__DOT__raddr_ptr),5);
    bufp->fullIData(oldp+36,(vlSelf->ahb2apb_swc_tb__DOT__spictrl_swc_inst__DOT__wdr_syncfifo_swc_inst__DOT__fifo_ram[0]),32);
    bufp->fullIData(oldp+37,(vlSelf->ahb2apb_swc_tb__DOT__spictrl_swc_inst__DOT__wdr_syncfifo_swc_inst__DOT__fifo_ram[1]),32);
    bufp->fullIData(oldp+38,(vlSelf->ahb2apb_swc_tb__DOT__spictrl_swc_inst__DOT__wdr_syncfifo_swc_inst__DOT__fifo_ram[2]),32);
    bufp->fullIData(oldp+39,(vlSelf->ahb2apb_swc_tb__DOT__spictrl_swc_inst__DOT__wdr_syncfifo_swc_inst__DOT__fifo_ram[3]),32);
    bufp->fullIData(oldp+40,(vlSelf->ahb2apb_swc_tb__DOT__spictrl_swc_inst__DOT__wdr_syncfifo_swc_inst__DOT__fifo_ram[4]),32);
    bufp->fullIData(oldp+41,(vlSelf->ahb2apb_swc_tb__DOT__spictrl_swc_inst__DOT__wdr_syncfifo_swc_inst__DOT__fifo_ram[5]),32);
    bufp->fullIData(oldp+42,(vlSelf->ahb2apb_swc_tb__DOT__spictrl_swc_inst__DOT__wdr_syncfifo_swc_inst__DOT__fifo_ram[6]),32);
    bufp->fullIData(oldp+43,(vlSelf->ahb2apb_swc_tb__DOT__spictrl_swc_inst__DOT__wdr_syncfifo_swc_inst__DOT__fifo_ram[7]),32);
    bufp->fullIData(oldp+44,(vlSelf->ahb2apb_swc_tb__DOT__spictrl_swc_inst__DOT__wdr_syncfifo_swc_inst__DOT__fifo_ram[8]),32);
    bufp->fullIData(oldp+45,(vlSelf->ahb2apb_swc_tb__DOT__spictrl_swc_inst__DOT__wdr_syncfifo_swc_inst__DOT__fifo_ram[9]),32);
    bufp->fullIData(oldp+46,(vlSelf->ahb2apb_swc_tb__DOT__spictrl_swc_inst__DOT__wdr_syncfifo_swc_inst__DOT__fifo_ram[10]),32);
    bufp->fullIData(oldp+47,(vlSelf->ahb2apb_swc_tb__DOT__spictrl_swc_inst__DOT__wdr_syncfifo_swc_inst__DOT__fifo_ram[11]),32);
    bufp->fullIData(oldp+48,(vlSelf->ahb2apb_swc_tb__DOT__spictrl_swc_inst__DOT__wdr_syncfifo_swc_inst__DOT__fifo_ram[12]),32);
    bufp->fullIData(oldp+49,(vlSelf->ahb2apb_swc_tb__DOT__spictrl_swc_inst__DOT__wdr_syncfifo_swc_inst__DOT__fifo_ram[13]),32);
    bufp->fullIData(oldp+50,(vlSelf->ahb2apb_swc_tb__DOT__spictrl_swc_inst__DOT__wdr_syncfifo_swc_inst__DOT__fifo_ram[14]),32);
    bufp->fullIData(oldp+51,(vlSelf->ahb2apb_swc_tb__DOT__spictrl_swc_inst__DOT__wdr_syncfifo_swc_inst__DOT__fifo_ram[15]),32);
    bufp->fullIData(oldp+52,(vlSelf->ahb2apb_swc_tb__DOT__haddr),32);
    bufp->fullCData(oldp+53,(vlSelf->ahb2apb_swc_tb__DOT__htrans),2);
    bufp->fullIData(oldp+54,(vlSelf->ahb2apb_swc_tb__DOT__hwdata),32);
    bufp->fullIData(oldp+55,(vlSelf->ahb2apb_swc_tb__DOT__hrdata),32);
    bufp->fullBit(oldp+56,(vlSelf->ahb2apb_swc_tb__DOT__hwrite));
    bufp->fullBit(oldp+57,(vlSelf->ahb2apb_swc_tb__DOT__hready));
    bufp->fullBit(oldp+58,(vlSelf->ahb2apb_swc_tb__DOT__wbuffread));
    bufp->fullBit(oldp+59,(vlSelf->ahb2apb_swc_tb__DOT__rbuffread));
    bufp->fullBit(oldp+60,(vlSelf->ahb2apb_swc_tb__DOT__rbuffwrite));
    bufp->fullIData(oldp+61,(vlSelf->ahb2apb_swc_tb__DOT__rbuffdata),32);
    bufp->fullBit(oldp+62,(vlSelf->ahb2apb_swc_tb__DOT__done));
    bufp->fullBit(oldp+63,(vlSelf->ahb2apb_swc_tb__DOT__resp));
    bufp->fullBit(oldp+64,(vlSelf->ahb2apb_swc_tb__DOT__ahb2apb_swc_inst__DOT__wreq_ahbs));
    bufp->fullIData(oldp+65,(vlSelf->ahb2apb_swc_tb__DOT__ahb2apb_swc_inst__DOT__wbuffdata),32);
    bufp->fullIData(oldp+66,(vlSelf->ahb2apb_swc_tb__DOT__ahb2apb_swc_inst__DOT__wbuffaddr),32);
    bufp->fullBit(oldp+67,(vlSelf->ahb2apb_swc_tb__DOT__ahb2apb_swc_inst__DOT__rreq_ahbs));
    bufp->fullIData(oldp+68,(vlSelf->ahb2apb_swc_tb__DOT__ahb2apb_swc_inst__DOT__rbuffaddr),32);
    bufp->fullBit(oldp+69,(vlSelf->ahb2apb_swc_tb__DOT__ahb2apb_swc_inst__DOT__done_r));
    bufp->fullBit(oldp+70,(vlSelf->ahb2apb_swc_tb__DOT__ahb2apb_swc_inst__DOT__done_rr));
    bufp->fullBit(oldp+71,(vlSelf->ahb2apb_swc_tb__DOT__ahb2apb_swc_inst__DOT__done_rrr));
    bufp->fullBit(oldp+72,(((~ (IData)(vlSelf->ahb2apb_swc_tb__DOT__ahb2apb_swc_inst__DOT__done_rrr)) 
                            & (IData)(vlSelf->ahb2apb_swc_tb__DOT__ahb2apb_swc_inst__DOT__done_rr))));
    bufp->fullBit(oldp+73,(vlSelf->ahb2apb_swc_tb__DOT__ahb2apb_swc_inst__DOT__wreq_ahbs_edge));
    bufp->fullBit(oldp+74,(vlSelf->ahb2apb_swc_tb__DOT__ahb2apb_swc_inst__DOT__rreq_ahbs_edge));
    bufp->fullCData(oldp+75,(vlSelf->ahb2apb_swc_tb__DOT__ahb2apb_swc_inst__DOT__ahb2apb_ahbs_swc_inst__DOT__state),3);
    bufp->fullCData(oldp+76,(vlSelf->ahb2apb_swc_tb__DOT__ahb2apb_swc_inst__DOT__ahb2apb_ahbs_swc_inst__DOT__nextstate),3);
    bufp->fullCData(oldp+77,(vlSelf->ahb2apb_swc_tb__DOT__ahbm_swc_inst__DOT__state),2);
    bufp->fullIData(oldp+78,(vlSelf->ahb2apb_swc_tb__DOT__ahbm_swc_inst__DOT__hwdatabuff),32);
    bufp->fullBit(oldp+79,(vlSelf->ahb2apb_swc_tb__DOT__ahbm_swc_inst__DOT__wpendingflag));
    bufp->fullBit(oldp+80,(vlSelf->ahb2apb_swc_tb__DOT__ahbm_swc_inst__DOT__wpendingflagdly));
    bufp->fullBit(oldp+81,(vlSelf->ahb2apb_swc_tb__DOT__ahbm_swc_inst__DOT__rpendingflag));
    bufp->fullBit(oldp+82,(vlSelf->ahb2apb_swc_tb__DOT__ahbm_swc_inst__DOT__rpendingflagdly));
    bufp->fullCData(oldp+83,(vlSelf->ahb2apb_swc_tb__DOT__pselx),3);
    bufp->fullBit(oldp+84,(vlSelf->ahb2apb_swc_tb__DOT__pready));
    bufp->fullBit(oldp+85,(vlSelf->ahb2apb_swc_tb__DOT__ahb2apb_swc_inst__DOT__done_apbm));
    bufp->fullCData(oldp+86,(vlSelf->ahb2apb_swc_tb__DOT__ahb2apb_swc_inst__DOT__ahb2apb_apbm_swc_inst__DOT__state),2);
    bufp->fullCData(oldp+87,(vlSelf->ahb2apb_swc_tb__DOT__ahb2apb_swc_inst__DOT__ahb2apb_apbm_swc_inst__DOT__nextstate),2);
    bufp->fullBit(oldp+88,((1U & (IData)(vlSelf->ahb2apb_swc_tb__DOT__pselx))));
    bufp->fullBit(oldp+89,(vlSelf->ahb2apb_swc_tb__DOT__rstn));
    bufp->fullBit(oldp+90,(vlSelf->ahb2apb_swc_tb__DOT__hclk));
    bufp->fullBit(oldp+91,(vlSelf->ahb2apb_swc_tb__DOT__pclk));
    bufp->fullBit(oldp+92,(vlSelf->ahb2apb_swc_tb__DOT__wreq));
    bufp->fullIData(oldp+93,(vlSelf->ahb2apb_swc_tb__DOT__wbuffdata),32);
    bufp->fullIData(oldp+94,(vlSelf->ahb2apb_swc_tb__DOT__wbuffaddr),32);
    bufp->fullCData(oldp+95,(vlSelf->ahb2apb_swc_tb__DOT__ahbm_swc_inst__DOT__nextstate),2);
    bufp->fullBit(oldp+96,(0U));
    bufp->fullBit(oldp+97,(vlSelf->ahb2apb_swc_tb__DOT__hmastlock));
    bufp->fullCData(oldp+98,(vlSelf->ahb2apb_swc_tb__DOT__hprot),7);
    bufp->fullCData(oldp+99,(vlSelf->ahb2apb_swc_tb__DOT__hsize),3);
    bufp->fullBit(oldp+100,(vlSelf->ahb2apb_swc_tb__DOT__hresp));
    bufp->fullBit(oldp+101,(vlSelf->ahb2apb_swc_tb__DOT__rreq));
    bufp->fullIData(oldp+102,(vlSelf->ahb2apb_swc_tb__DOT__rbuffaddr),32);
    bufp->fullIData(oldp+103,(3U),32);
    bufp->fullIData(oldp+104,(0U),32);
    bufp->fullIData(oldp+105,(1U),32);
    bufp->fullIData(oldp+106,(2U),32);
    bufp->fullIData(oldp+107,(4U),32);
    bufp->fullIData(oldp+108,(5U),32);
    bufp->fullIData(oldp+109,(6U),32);
    bufp->fullIData(oldp+110,(7U),32);
    bufp->fullIData(oldp+111,(0x100000U),32);
    bufp->fullIData(oldp+112,(0x100004U),32);
    bufp->fullIData(oldp+113,(0x100008U),32);
    bufp->fullIData(oldp+114,(0x10000cU),32);
    bufp->fullIData(oldp+115,(vlSelf->ahb2apb_swc_tb__DOT__spictrl_swc_inst__DOT__SPI_RDR),32);
    bufp->fullIData(oldp+116,(0xbU),32);
    bufp->fullSData(oldp+117,(0xfU),11);
    bufp->fullIData(oldp+118,(0x20U),32);
    bufp->fullIData(oldp+119,(0x10U),32);
}
